package mediacomputation;
import java.io.FileNotFoundException;
import java.io.File;
import java.util.Scanner;
import java.util.ArrayList;

public class BabyNameGraph {
	private static Scanner in = new Scanner(System.in);
	public BabyNameGraph()
	{
		menu();
	}
	
	public static void menu()
	{
		int range;
		int range2;
		int singleRange;
		displayGreeting();
		String inputText = getTextFile();
		File inputFile = new File(inputText);
		String userChoice;
		do {
			userChoice = getMenuChoice();

			switch (userChoice.toUpperCase().charAt(0)) {
			case '1':
				System.out.println("Please specify a range of ranks to graph!");
				range = rangeReturn();
				range2 = range2Return();
				if (range2 - range > 25 || range2 - range < 0)
				{
					System.out.println("This is not an acceptable range.");
				} else {
					// PUT YOUR METHOD HERE
					// range and range2 are the values you need
				}
				break;
			case '2':
				System.out.println("Please specify a single rank to graph!");
				singleRange = singleRankReturn();
				//PUT YOUR METHOD HERE
				// singleRange is the value you need
				break;
			case 'Q':
				System.out.println("As you wish... :)");
				in.close();
				break;
			default:
				System.out.println("Invalid choice");
			}

		} while (! userChoice.toUpperCase().equals("QUIT"));
	}
	public static String getMenuChoice() {
		System.out.println("Choose an option.");
		System.out.println("1: This option plots the names in a specified range of ranks");
		System.out.println("2: This option plots your rank choice plus the five");
		System.out.println("   ranks before it and after it");
		System.out.println("Quit: Quit... be done... good bye!");
		System.out.print("What would you like to do? ");
		String response = in.nextLine();

		return response;
	}
	public static String getTextFile() {
		System.out.println("Please provide a text file");
		System.out.println("");
		String textFile = in.nextLine();

		return textFile;
	}
	public static int rangeReturn() {
		String initialRange = in.nextLine();
		int range = Integer.parseInt(initialRange);
		return range;
	}
	public static int range2Return() {
		String initialRange2 = in.nextLine();
		int range2 = Integer.parseInt(initialRange2);
		return range2;
	}
	public static int singleRankReturn() {
		String initialSingleRange = in.nextLine();
		int singleRange = Integer.parseInt(initialSingleRange);
		return singleRange;
	}
	public static void displayGreeting() {
		System.out.println("This program creates bar graphs that shows popular baby names in the US.");
		System.out.println("You will be provided different options for the program to carry out.");
		System.out.println("The program will continue to runand ask for input until you choose the quit option");
		System.out.println();
		System.out.println();
	}
	public String FormatLine(String line)
	{
		String newText = "";
		for(int i = 0; i < line.length(); i++) {
			if(line.charAt(i) == ',')
			{
			} else if(Character.isWhitespace(line.charAt(i))) {
				newText += ',';
			} else {
				newText += line.charAt(i);
			}
		}
		return newText;
	}

	public void readDataToArray(File file) throws FileNotFoundException
	{
		Scanner input = new Scanner(file);
		ArrayList<BabyName> babyBoyData = new ArrayList<BabyName>();
		ArrayList<BabyName> babyGirlData = new ArrayList<BabyName>();
		input.nextLine();

		while(input.hasNextLine())
		{
			String line = input.nextLine();
			String formattedLine = FormatLine(line);
			String[] babyData = formattedLine.split(",");
			BabyName babyBoy = new BabyName(Integer.parseInt(babyData[0]), babyData[1], Integer.parseInt(babyData[2]));
			BabyName babyGirl = new BabyName(Integer.parseInt(babyData[0]), babyData[3], Integer.parseInt(babyData[4]));
			babyBoyData.add(babyBoy);
			babyGirlData.add(babyGirl);
		}
	}
}
